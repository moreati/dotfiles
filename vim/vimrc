set nocompatible    " Enable Vim features, don't maintain Vi compatibility
set modeline        " Allow individual files to customise settings

set backspace=indent,eol,start

" Indenting
set autoindent      " Indent a new line the same as the current line, or ...
"set smartindent     " Smarter autoindent based on e.g. {, }, and keywords
                    " Don't use this in combination with filetype plugin
set expandtab       " Insert spaces instead of tab characters
set shiftwidth=4    " Number of spaces in a level of (auto)indent
set softtabstop=4   " <Tab>/<BS> indent or dedent as if tabstop has this val
set smarttab        " <Tab>/<BS> at the start of a line follow shiftwidth

" Searching
set hlsearch        " Highlight search terms
set incsearch       " Jump to the first match as a search is typed
set ignorecase      " Search case insensitively by default
set smartcase       " Search case sensitively if the term contains uppercase

" Appearence
set background=dark     " Assume a dark background, use light text highlights
set display=lastline    " Don't render partial lines as @@@@@@@
set formatoptions+=r    " Insert the comment leader after <Enter> is typed
set number              " Show line numbers
highlight LineNr ctermfg=darkgray
set ruler               " Show cursor position on the last line or status line
set cursorline          " Highlight current line
set list                " Render special chars (tabs as ^I, line ends as $)
set listchars=tab:\ \ ,trail:Â·
                        " Show trailing whitespace, e.g. these spaces    

" Behaviour
set confirm         " Ask to save changes when quitting
set wildmenu        " Show autocomplete options for :foo<Tab>
set viminfo+=n~/.vim/viminfo

"Keyboard shortcuts
"
"       Insert  Normal  Visual  Select    Op     Command  Lang
"                                       pending   line    Arg
" map             X       X       X       X
" nmap            X
" vmap                    X       X
" smap                            X
" xmap                    x
" omap                                    X
" map!    X                                         X
" imap    X
" lmap    X                                         X      X
" cmap                                              X

" Ctrl+L to hide search highlights, then redraw screen
nnoremap <C-L> :nohlsearch<CR><C-L>
" Shift+Tab to dedent
inoremap <S-Tab> <C-d>

if has('cmdline_info')
    " From http://static.gpicon.org/code/vimrc.html
    "set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " Ruler on steroids
    set showcmd     " Partial cmds in status line/selection in visual mode
endif

if has('statusline')
    set laststatus=1 " show statusline only if there are > 1 windows
    "set statusline=%<%f\ %=\:\b%n%y%m%r%w\ %l,%c%V\ %P 
endif

if has('mouse')
    set mouse=a             " Move cursor in response to mouse clicks
    set mousemodel=popup    " Show right-click menu, don't extend selection
endif

if has('gui_running')
    set showtabline=1   " Show tab bar (0:never, 1:if 2+ docs, 2:always)
    set guioptions-=T   " Hide toolbar
    set guioptions+=e   " Draw document tabs using GUI toolkit?
    set guioptions-=t   " Hide menu tear offs
    set guicursor+=a:blinkon1000
    set guicursor+=a:blinkoff1000
    set guifont=Ubuntu\ Mono\ 12
    set columns=85
endif

filetype on         " Enable file type detection
filetype plugin on  " Load plugins, customizes vim per filetype
filetype indent on  " Set indentation/tabs based on filetype

if has('autocmd')
    augroup python
    augroup END

    augroup xml
    	" TODO Use FileType instead
        autocmd BufReadPre,FileReadPre    *.xml set tabstop=2
        autocmd BufReadPre,FileReadPre    *.xml set matchpairs+=<:>
    augroup END

    " TODO vimrc, sql, html, css, php, asp, jsp, properties, axl
endif

" Load the bundled matchit.vim, if no newer version installed as a plugin
" matchit.vim extends % (jump-to-matching delimiter)
"if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
"    runtime! macros/matchit.vim
"endif

" TODO
" - Window title/tab titles with intelligent uniqueness
