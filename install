#!/usr/bin/env python3
"""Symlink dotfiles into a home directory."""

import argparse
import fnmatch
import os

SKIP_PATTERNS = {
    'README*',
    os.path.basename(__file__),
}

SRCBASE = os.path.abspath(os.path.dirname(__file__))
DSTBASE = os.path.expanduser('~')


def fnmatches(name, patterns):
    return any(fnmatch.fnmatch(name, p) for p in patterns)


parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument('-f', '--force', action='store_true',
                    help='Overwrite existing files')
args = parser.parse_args()

os.chdir(SRCBASE)

for line in os.popen('git ls-files'):
    src_relpath = line.rstrip('\n')
    dst_relpath = '.' + src_relpath
    src_reldir, src_filename = os.path.split(src_relpath)
    dst_reldir, dst_filename = os.path.split(dst_relpath)

    dst_absdir = os.path.join(DSTBASE, dst_reldir)
    if src_reldir:
        os.makedirs(dst_absdir, exist_ok=True)

    if fnmatches(src_filename, SKIP_PATTERNS):
        continue

    src_abspath = os.path.join(SRCBASE, src_relpath)
    dst_abspath = os.path.join(DSTBASE, dst_relpath)
    dst_rellink = os.path.relpath(src_abspath, dst_absdir)

    if args.force:
        try:
            os.unlink(dst_abspath)
        except FileNotFoundError:
            pass

    os.symlink(dst_rellink, dst_abspath)

# vim: filetype=python
